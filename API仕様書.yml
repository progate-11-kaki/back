openapi: 3.0.0
info:
  title: Flask API for Project Management
  description: API documentation for managing projects, commits, users, and notifications.
  version: 1.0.0
  contact:
    name: Your Name
    email: your.email@example.com
paths:
  /:
    get:
      summary: Home
      description: Fetches projects and notifications for the logged-in user.
      operationId: home
      responses:
        '200':
          description: Successful retrieval of projects and notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        message:
                          type: string
  /login:
    post:
      summary: Login
      description: Logs in a user with the provided credentials.
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /logout:
    get:
      summary: Logout
      description: Logs out the current user.
      operationId: logout
      responses:
        '200':
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /register:
    post:
      summary: User Registration
      description: Registers a new user with username and password.
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                password2:
                  type: string
      responses:
        '200':
          description: User registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Passwords do not match
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /profile:
    get:
      summary: Get User Profile
      description: Fetches the profile details of the logged-in user.
      operationId: getProfile
      responses:
        '200':
          description: Successful retrieval of user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  projects:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        latest_commit:
                          type: string
                  profile_image:
                    type: string
    post:
      summary: Update Profile Image
      description: Updates the profile image of the logged-in user.
      operationId: updateProfileImage
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile_image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Profile image updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /makeproject:
    post:
      summary: Create a Project
      description: Creates a new project and adds a commit.
      operationId: makeProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_name:
                  type: string
                project_description:
                  type: string
                tags:
                  type: string
                commit_message:
                  type: string
      responses:
        '200':
          description: Project and commit created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  project_id:
                    type: integer
        '400':
          description: Missing image file
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /project/{project_id}:
    get:
      summary: Get Project Details
      description: Fetches details of a specific project.
      operationId: getProjectDetail
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful retrieval of project details
          content:
            application/json:
              schema:
                type: object
                properties:
                  project_id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  is_public:
                    type: boolean
                  latest_commit:
                    type: string
    patch:
      summary: Toggle Project Visibility
      description: Toggles the visibility of a project.
      operationId: toggleProjectVisibility
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Project visibility updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      summary: Delete Project
      description: Deletes a specific project.
      operationId: deleteProject
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Project deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /project/{project_id}/invite:
    get:
      summary: Search Users for Project Invitation
      description: Searches users to invite to the project.
      operationId: searchUsersForInvite
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
        - in: query
          name: search
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Users found for invitation
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        username:
                          type: string
    post:
      summary: Invite User to Project
      description: Sends an invitation to a user for the project.
      operationId: inviteUserToProject
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
      responses:
        '200':
          description: User invited successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /project/{project_id}/commit:
    post:
      summary: Add Commit to Project
      description: Adds a commit to a project.
      operationId: addCommitToProject
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                commit_message:
                  type: string
      responses:
        '200':
          description: Commit added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /project/{project_id}/commits:
    get:
      summary: Get all commits for a project
      description: Retrieve the list of commits for a specific project.
      operationId: getProjectCommits
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successfully retrieved commits
          content:
            application/json:
              schema:
                type: object
                properties:
                  commits:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        message:
                          type: string
                        date_posted:
                          type: string
                          format: date-time
                          
  /notification/{notification_id}/respond/{response}:
    patch:
      summary: Respond to a notification
      parameters:
        - name: notification_id
          in: path
          description: The ID of the notification
          required: true
          schema:
            type: string
        - name: response
          in: path
          description: The response to the notification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
       
